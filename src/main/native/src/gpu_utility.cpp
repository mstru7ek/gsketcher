#include "gpu_utility.h"

CusolverStatusName::CusolverStatusName() {

#define SET_STATUS(NAME, INDEX) CU_SOLVER_STATUS_NAME[INDEX] = NAME;
    SET_STATUS("CUSOLVER_STATUS_SUCCESS", 0);
    SET_STATUS("CUSOLVER_STATUS_NOT_INITIALIZED", 1);
    SET_STATUS("CUSOLVER_STATUS_ALLOC_FAILED", 2);
    SET_STATUS("CUSOLVER_STATUS_INVALID_VALUE", 3);
    SET_STATUS("CUSOLVER_STATUS_ARCH_MISMATCH", 4);
    SET_STATUS("CUSOLVER_STATUS_MAPPING_ERROR", 5);
    SET_STATUS("CUSOLVER_STATUS_EXECUTION_FAILED", 6);
    SET_STATUS("CUSOLVER_STATUS_INTERNAL_ERROR", 7);
    SET_STATUS("CUSOLVER_STATUS_MATRIX_TYPE_NOT_SUPPORTED", 8);
    SET_STATUS("CUSOLVER_STATUS_NOT_SUPPORTED", 9);
    SET_STATUS("CUSOLVER_STATUS_ZERO_PIVOT", 10);
    SET_STATUS("CUSOLVER_STATUS_INVALID_LICENSE", 11);
    SET_STATUS("CUSOLVER_STATUS_IRS_PARAMS_NOT_INITIALIZED", 12);
    SET_STATUS("CUSOLVER_STATUS_IRS_PARAMS_INVALID", 13);
    SET_STATUS("CUSOLVER_STATUS_IRS_PARAMS_INVALID_PREC", 14);
    SET_STATUS("CUSOLVER_STATUS_IRS_PARAMS_INVALID_REFINE", 15);
    SET_STATUS("CUSOLVER_STATUS_IRS_PARAMS_INVALID_MAXITER", 16);
    SET_STATUS("CUSOLVER_STATUS_IRS_INTERNAL_ERROR", 20);
    SET_STATUS("CUSOLVER_STATUS_IRS_NOT_SUPPORTED", 21);
    SET_STATUS("CUSOLVER_STATUS_IRS_OUT_OF_RANGE", 22);
    SET_STATUS("CUSOLVER_STATUS_IRS_NRHS_NOT_SUPPORTED_FOR_REFINE_GMRES", 23);
    SET_STATUS("CUSOLVER_STATUS_IRS_INFOS_NOT_INITIALIZED", 25);
    SET_STATUS("CUSOLVER_STATUS_IRS_INFOS_NOT_DESTROYED", 26);
    SET_STATUS("CUSOLVER_STATUS_IRS_MATRIX_SINGULAR", 30);
    SET_STATUS("CUSOLVER_STATUS_INVALID_WORKSPACE", 31);
#undef SET_STATUS
};

static CusolverStatusName STATUS_NAME_PROVIDER{};

const char *cusolverGetErrorName(cusolverStatus_t status) {
    return STATUS_NAME_PROVIDER.CU_SOLVER_STATUS_NAME[status];
}


void log_error(cusparseStatus_t status, const char *error){
    auto errorName = cusparseGetErrorName(status);
    auto errorStr = cusparseGetErrorString(status);
    std::string format = std::string(error) + std::string(" ; ( %s ) %s \n");
    fprintf(stderr, format.c_str(), errorName, errorStr);
}
